version: 2
jobs:
  build_and_test:
    parallelism: 2
    docker:
      - image: circleci/ruby:2.6.5-node
      - image: circleci/postgres:9.6.9-alpine
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      POSTGRES_HOST: localhost
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: ''
      RAILS_ENV: test
    steps:
      - checkout
      - restore_cache:
          keys:
          - rails-bundle-v1-{{ checksum "Gemfile.lock" }}
          - rails-bundle-v1-
      - run:
          name: gem依存関係のインストール
          command: bundle check || bundle install
      - save_cache:
          key: rails-bundle-v1-{{ checksum "Gemfile.lock" }}
          paths:
          - vendor/bundle
      - restore_cache:
          keys:
          - rails-yarn-v1-{{ checksum "yarn.lock" }}
          - rails-yarn-v1-
      - run:
          name: node_modules依存関係のインストール
          command: yarn install
      - save_cache:
          key: rails-yarn-v1-{{ checksum "yarn.lock" }}
          paths:
          - ~/.cache/yarn
      - run:
          name: データベースの起動を待機
          command: |
            dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: データベースのセットアップ
          command: bin/rails db:schema:load --trace
      - run:
          name: 並列にテストを実行
          command: |
            bundle exec rspec --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results
      - run:
          name: カバレッジレポートをアップロードする準備
          command: |
            mkdir coverage_results
            cp coverage/.resultset.json coverage_results/.resultset-${CIRCLE_NODE_INDEX}.json
      - persist_to_workspace:
          root: ~/project
          paths:
            - vendor/bundle
            - coverage_results
  coverage:
    docker:
      - image: circleci/ruby:2.6.5-node
    environment:
      BUNDLE_PATH: vendor/bundle
      RAILS_ENV: test
    steps:
      - checkout
      - attach_workspace:
            at: ~/project
      - run: bundle install
      - run:
          name: カバレッジレポートをマージ
          command: |
            bundle exec rake simplecov:merge_results
      - store_artifacts:
          path: coverage
workflows:
  version: 2
  main:
    jobs:
    - build_and_test
    - coverage:
        requires:
          - build_and_test
